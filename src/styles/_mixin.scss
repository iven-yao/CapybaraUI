@import './variables';

@mixin preset-background {
    &.bg-red {
        background-color: color(red, bg);
        color: color(red, text);
    }

    &.bg-orange {
        background-color: color(orange, bg);
        color: color(orange, text);
    }

    &.bg-yellow {
        background-color: color(yellow, bg);
        color: color(yellow, text);
    }

    &.bg-green {
        background-color: color(green, bg);
        color: color(green, text);
    }

    &.bg-blue {
        background-color: color(blue, bg);
        color: color(blue, text);
    }

    &.bg-indigo {
        background-color: color(indigo, bg);
        color: color(indigo, text);
    }

    &.bg-violet {
        background-color: color(violet, bg);
        color: color(violet, text);
    }

    &.bg-gray {
        background-color: color(gray, bg);
        color: color(gray, text);
    }

    &.bg-white {
        background-color: white;
        color: color(red, text);
    }

    &.bg-black {
        color: white;
        background-color: black;
    }
}

@mixin preset-hover-background {
    &.bg-red:hover {
        background-color: color(red, hover);
    }

    &.bg-orange:hover {
        background-color: color(orange, hover);
    }

    &.bg-yellow:hover {
        background-color: color(yellow, hover);
    }

    &.bg-green:hover {
        background-color: color(green, hover);
    }

    &.bg-blue:hover {
        background-color: color(blue, hover);
    }

    &.bg-indigo:hover {
        background-color: color(indigo, hover);
    }

    &.bg-violet:hover {
        background-color: color(violet, hover);
    }

    &.bg-gray:hover {
        background-color: color(gray, hover);
    }


    &.bg-white:hover {
        background-color: rgb(245, 245, 245);
    }

    &.bg-black:hover {
        background-color: rgba(black, 0.8);
    }
}

@mixin preset-border {
    &.border-red {
        border-color: color(red, border);
    }

    &.border-orange {
        border-color: color(orange, border);
    }

    &.border-yellow {
        border-color: color(yellow, border);
    }

    &.border-green {
        border-color: color(green, border);
    }

    &.border-blue {
        border-color: color(blue, border);
    }

    &.border-indigo {
        border-color: color(indigo, border);
    }

    &.border-violet {
        border-color: color(violet, border);
    }

    &.border-gray {
        border-color: color(gray, border);
    }

    &.border-white {
        border-color: rgba(lightgray,0.5);
    }

    &.border-black {
        border-color: black;
    }
}

@mixin preset-outline {
    &.border-red {
        outline: 0.2rem solid rgba(color(red, border), 0.5);
    }

    &.border-orange {
        outline: 0.2rem solid rgba(color(orange, border), 0.5);
    }

    &.border-yellow {
        outline: 0.2rem solid rgba(color(yellow, border), 0.5);
    }

    &.border-green {
        outline: 0.2rem solid rgba(color(green, border), 0.5);
    }

    &.border-blue {
        outline: 0.2rem solid rgba(color(blue, border), 0.5);
    }

    &.border-indigo {
        outline: 0.2rem solid rgba(color(indigo, border), 0.5);
    }

    &.border-violet {
        outline: 0.2rem solid rgba(color(violet, border), 0.5);
    }

    &.border-gray {
        outline: 0.2rem solid rgba(color(gray, border), 0.5);
    }

    &.border-white {
        outline: 0.2rem solid rgba(lightgray,0.5);
    }

    &.border-black {
        outline: 0.2rem solid rgba(black, 0.5);
    }
}


@mixin rounded {
    &.rounded-sm {
        border-radius: 0.25rem;
    }

    &.rounded-md {
        border-radius: 0.5rem;
    }

    &.rounded-lg {
        border-radius: 0.75rem;
    }

    &.rounded-pill {
        border-radius: 9999px;
    }

    &.rounded-circle {
        border-radius: 50%;
        width: fit-content;
        aspect-ratio: 1;
    }
}

@mixin var-color {
    
}